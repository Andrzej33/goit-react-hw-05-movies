{"version":3,"file":"static/js/415.21b4c683.chunk.js","mappings":"mTAEMA,EAAU,mCACVC,EAAM,gCAKCC,EAAW,mCAAG,qGAEDC,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,sCAAqCD,IAFzC,cAEnBI,EAFmB,yBAGlBA,EAAUC,MAHQ,2CAAH,qDAQXC,EAAS,mCAAG,WAAOC,GAAP,wFACCJ,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,iBAAgBM,EAAhB,oBAAmCP,IADzC,cACjBI,EADiB,yBAEhBA,EAAUC,MAFM,2CAAH,sDAMTG,EAAY,mCAAG,WAAOC,GAAP,gFACpBC,EAAa,IAAIC,gBADG,UAEFR,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,gCAA+BD,EAA/B,kBAAgDS,EAAhD,8CAAkG,CAACG,OAAQF,EAAWE,SAFzH,cAEpBR,EAFoB,yBAGnBA,EAAUC,MAHS,2CAAH,sDAOZQ,EAAgB,mCAAG,WAAON,GAAP,wFACNJ,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,iBAAgBM,EAAhB,4BAA2CP,EAA3C,oBADC,cACxBI,EADwB,yBAEvBA,EAAUC,MAFa,2CAAH,sDAMhBS,EAAe,mCAAG,WAAOP,GAAP,wFACLJ,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,iBAAgBM,EAAhB,4BAA2CP,EAA3C,2BADA,cACvBI,EADuB,yBAEtBA,EAAUC,MAFY,2CAAH,qD,kGC9BfU,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAAC,KAAD,UACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,yBACE,UAAC,IAAD,CAAYC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAtD,UACGG,EAAMK,MAAO,IACbL,EAAMK,QAAUL,EAAMM,iBACrB,iCAASN,EAAMM,eAAf,WAJGN,EAAME,GADA,KAYtB,C,+JCnBYK,EAAkBC,EAAAA,GAAAA,GAAH,8HAQfC,EAAkBD,EAAAA,GAAAA,GAAH,mEAKfE,EAAsBF,EAAAA,GAAAA,IAAH,wDAInBG,EAAiBH,EAAAA,GAAAA,GAAH,+J,yHCc3B,UA5Ba,WACX,OAA4BI,EAAAA,EAAAA,UAAS,IAArC,eAAOhB,EAAP,KAAeiB,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,6FACtBF,GAAa,GADS,mBAGMjC,EAAAA,EAAAA,MAHN,gBAGZoC,EAHY,EAGZA,QAERL,EAAUK,GALU,gDAOpBC,QAAQC,IAAI,KAAMC,SAPE,yBASpBN,GAAa,GATO,4EAAH,qDAYrBE,GACD,GAAE,KAED,iCACE,4CACCH,IAAa,SAAC,IAAD,IACblB,IAAU,SAAC,IAAD,CAAYA,OAAQA,MAGpC,C","sources":["API/API.jsx","components/MoviesList/MoviesList.jsx","components/MoviesList/StyledMovieList.jsx","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'd1209b93bfca019c1d550689906b1b5c';\nconst URL = 'https://api.themoviedb.org/3/';\n// const URL = 'https://api.themoviedb.org/3/trending/movie/day';\n\n// https://api.themoviedb.org/3/search/movie?api_key={api_key}&query=Jack+Reacher\n\nexport const fetchTrendy = async () => {\n \n  const ressponse = await axios(`${URL}trending/movie/day?api_key=${API_KEY}`);\n  return ressponse.data;\n};\n\n\n\nexport const fetchById = async (movieId) => {\n  const ressponse = await axios(`${URL}movie/${movieId}?api_key=${API_KEY}`);\n  return ressponse.data;\n};\n\n\nexport const fetchByQuery = async (query) => {\n  const controller = new AbortController()\n  const ressponse = await axios(`${URL}search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`,{signal: controller.signal});\n  return ressponse.data;\n};\n\n\nexport const fetchCreditsById = async (movieId) => {\n  const ressponse = await axios(`${URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n  return ressponse.data;\n};\n\n\nexport const fetchReviewById = async (movieId) => {\n  const ressponse = await axios(`${URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n  return ressponse.data;\n};","import PropTypes from 'prop-types';\nimport { StyledLink } from 'components/StyledLink/StyledLink';\nimport { useLocation } from 'react-router-dom';\nimport { StyledMovieList } from './StyledMovieList';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <StyledMovieList>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <StyledLink to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.title}{' '}\n            {movie.title !== movie.original_title && (\n              <span>:({movie.original_title})</span>\n            )}\n          </StyledLink>\n        </li>\n      ))}\n    </StyledMovieList>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      original_title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const StyledMovieList = styled.ul`\n  display: flex;\n  padding-left: 30px;\n  flex-direction: column;\n  gap: 10px;\n  font-size: 20px;\n`;\n\nexport const AdditionalTitle = styled.h4`\n  padding-left: 40px;\n  font-size: 22px;\n`;\n\nexport const AdditionalContainer = styled.div`\n  background-color: gainsboro;\n`;\n\nexport const AdditionalList = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  li {\n    font-size: 20px;\n    color: #128383;\n  }\n`;\n","import { fetchTrendy } from 'API/API';\nimport { Loader } from 'components/Loader/Loader';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { useState, useEffect } from 'react';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const getTrendyMovies = async () => {\n      setIsLoading(true);\n      try {\n        const { results } = await fetchTrendy();\n        // console.log(results);\n        setMovies(results);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getTrendyMovies();\n  }, []);\n  return (\n    <>\n      <h1>Trending Movies</h1>\n      {isLoading && <Loader />}\n      {movies && <MoviesList movies={movies} />}\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["API_KEY","URL","fetchTrendy","axios","ressponse","data","fetchById","movieId","fetchByQuery","query","controller","AbortController","signal","fetchCreditsById","fetchReviewById","MoviesList","movies","location","useLocation","map","movie","to","id","state","from","title","original_title","StyledMovieList","styled","AdditionalTitle","AdditionalContainer","AdditionalList","useState","setMovies","isLoading","setIsLoading","useEffect","getTrendyMovies","results","console","log","message"],"sourceRoot":""}