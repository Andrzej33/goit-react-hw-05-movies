{"version":3,"file":"static/js/415.6f3254d4.chunk.js","mappings":"mTAEMA,EAAU,mCACVC,EAAM,gCAKCC,EAAW,mCAAG,qGAEDC,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,sCAAqCD,IAFzC,cAEnBI,EAFmB,yBAGlBA,EAAUC,MAHQ,2CAAH,qDAQXC,EAAS,mCAAG,WAAOC,GAAP,wFACCJ,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,iBAAgBM,EAAhB,oBAAmCP,IADzC,cACjBI,EADiB,yBAEhBA,EAAUC,MAFM,2CAAH,sDAMTG,EAAY,mCAAG,WAAOC,GAAP,gFACpBC,EAAa,IAAIC,gBADG,UAEFR,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,gCAA+BD,EAA/B,kBAAgDS,EAAhD,8CAAkG,CAACG,OAAQF,EAAWE,SAFzH,cAEpBR,EAFoB,yBAGnBA,EAAUC,MAHS,2CAAH,sDAOZQ,EAAgB,mCAAG,WAAON,GAAP,wFACNJ,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,iBAAgBM,EAAhB,4BAA2CP,EAA3C,oBADC,cACxBI,EADwB,yBAEvBA,EAAUC,MAFa,2CAAH,sDAMhBS,EAAe,mCAAG,WAAOP,GAAP,wFACLJ,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,iBAAgBM,EAAhB,4BAA2CP,EAA3C,2BADA,cACvBI,EADuB,yBAEtBA,EAAUC,MAFY,2CAAH,qD,kGC9BfU,EAAa,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACpBC,GAAWC,EAAAA,EAAAA,MACf,OACI,SAAC,KAAD,UACCF,EAAOG,KAAI,SAAAC,GAAK,OAAG,yBAGpB,UAAC,IAAD,CAAYC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAtD,UAAmEG,EAAMK,MAAzE,IAAiFL,EAAMK,QAAUL,EAAMM,iBAAkB,iCAASN,EAAMM,eAAf,WAH5FN,EAAME,GAAlB,KAOxB,C,+JCdYK,EAAkBC,EAAAA,GAAAA,GAAH,oHAQfC,EAAkBD,EAAAA,GAAAA,GAAH,uEAKfE,EAAsBF,EAAAA,GAAAA,IAAH,0DAInBG,EAAiBH,EAAAA,GAAAA,GAAH,kL,yHCkB3B,UA/Bc,WAEd,OAA2BI,EAAAA,EAAAA,UAAS,IAApC,eAAOhB,EAAP,KAAciB,EAAd,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAkBI,OAdJC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAe,mCAAG,6FACpBF,GAAa,GADO,mBAGQjC,EAAAA,EAAAA,MAHR,gBAGToC,EAHS,EAGTA,QAEPL,EAAUK,GALM,gDAOjBC,QAAQC,IAAI,KAAMC,SAPD,yBASZN,GAAa,GATD,4EAAH,qDAWzBE,GACC,GAAC,KAEK,iCACA,4CACCH,IAAa,SAAC,IAAD,IACZlB,IAAU,SAAC,IAAD,CAAYA,OAAQA,MAItC,C","sources":["API/API.jsx","components/MoviesList/MoviesList.jsx","components/MoviesList/StyledMovieList.jsx","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'd1209b93bfca019c1d550689906b1b5c';\nconst URL = 'https://api.themoviedb.org/3/';\n// const URL = 'https://api.themoviedb.org/3/trending/movie/day';\n\n// https://api.themoviedb.org/3/search/movie?api_key={api_key}&query=Jack+Reacher\n\nexport const fetchTrendy = async () => {\n \n  const ressponse = await axios(`${URL}trending/movie/day?api_key=${API_KEY}`);\n  return ressponse.data;\n};\n\n\n\nexport const fetchById = async (movieId) => {\n  const ressponse = await axios(`${URL}movie/${movieId}?api_key=${API_KEY}`);\n  return ressponse.data;\n};\n\n\nexport const fetchByQuery = async (query) => {\n  const controller = new AbortController()\n  const ressponse = await axios(`${URL}search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`,{signal: controller.signal});\n  return ressponse.data;\n};\n\n\nexport const fetchCreditsById = async (movieId) => {\n  const ressponse = await axios(`${URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n  return ressponse.data;\n};\n\n\nexport const fetchReviewById = async (movieId) => {\n  const ressponse = await axios(`${URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n  return ressponse.data;\n};","import { StyledLink } from \"components/StyledLink/StyledLink\";\nimport { useLocation } from \"react-router-dom\";\nimport { StyledMovieList } from \"./StyledMovieList\";\n\n\nexport const MoviesList = ({movies}) => {\n  const location = useLocation();\n    return(\n        <StyledMovieList>\n        {movies.map(movie=>(<li key={movie.id}\n      \n         >\n        <StyledLink to={`/movies/${movie.id}`} state={{ from: location }}>{movie.title} {movie.title !== movie.original_title && <span>:({movie.original_title})</span>}</StyledLink>\n        </li>))} \n        </StyledMovieList> \n    )\n}","import styled from \"styled-components\";\n\nexport const StyledMovieList = styled.ul`\ndisplay: flex;\npadding-left: 30px;\nflex-direction: column;\ngap: 10px;\nfont-size: 20px;\n`;\n\nexport const AdditionalTitle = styled.h4`\n    padding-left: 40px;\n    font-size: 22px;\n`\n\nexport const AdditionalContainer = styled.div`\n    background-color: gainsboro;\n`\n\nexport const AdditionalList = styled.ul`\n    list-style: none;\n    display: flex;\n    flex-direction: column;\n    gap: 30px;\n    li{\n        font-size: 20px;\n        color: #128383;\n    }\n`","import { fetchTrendy } from \"API/API\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { MoviesList } from \"components/MoviesList/MoviesList\";\nimport {useState, useEffect } from \"react\";\n\n\n const Home = ()=> {\n\nconst [movies,setMovies] = useState([]);\nconst [isLoading, setIsLoading] = useState(false);\n\n\n\nuseEffect(()=>{\n    const getTrendyMovies = async () => {\n        setIsLoading(true)\n        try {\n            const {results} = await fetchTrendy(); \n            // console.log(results);\n            setMovies(results)  \n        } catch (error) {\n           console.log(error.message); \n        }\n        finally{setIsLoading(false)}\n    }\ngetTrendyMovies()\n},[])\n    return(\n       <>\n       <h1>Trending Movies</h1>\n       {isLoading && <Loader/>}\n        {movies && <MoviesList movies={movies}/>}\n       </>\n\n    )\n}\n\nexport default Home;"],"names":["API_KEY","URL","fetchTrendy","axios","ressponse","data","fetchById","movieId","fetchByQuery","query","controller","AbortController","signal","fetchCreditsById","fetchReviewById","MoviesList","movies","location","useLocation","map","movie","to","id","state","from","title","original_title","StyledMovieList","styled","AdditionalTitle","AdditionalContainer","AdditionalList","useState","setMovies","isLoading","setIsLoading","useEffect","getTrendyMovies","results","console","log","message"],"sourceRoot":""}