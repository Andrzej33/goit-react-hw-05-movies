{"version":3,"file":"static/js/493.bb14e645.chunk.js","mappings":"+SAEMA,EAAU,mCACVC,EAAM,gCAKCC,EAAW,mCAAG,qGAEDC,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,sCAAqCD,IAFzC,cAEnBI,EAFmB,yBAGlBA,EAAUC,MAHQ,2CAAH,qDAQXC,EAAS,mCAAG,WAAOC,GAAP,wFACCJ,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,iBAAgBM,EAAhB,oBAAmCP,IADzC,cACjBI,EADiB,yBAEhBA,EAAUC,MAFM,2CAAH,sDAMTG,EAAY,mCAAG,WAAOC,GAAP,wFACFN,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,gCAA+BD,EAA/B,kBAAgDS,EAAhD,+CADH,cACpBL,EADoB,yBAEnBA,EAAUC,MAFS,2CAAH,sDAMZK,EAAgB,mCAAG,WAAOH,GAAP,wFACNJ,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,iBAAgBM,EAAhB,4BAA2CP,EAA3C,oBADC,cACxBI,EADwB,yBAEvBA,EAAUC,MAFa,2CAAH,sDAMhBM,EAAe,mCAAG,WAAOJ,GAAP,wFACLJ,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,iBAAgBM,EAAhB,4BAA2CP,EAA3C,2BADA,cACvBI,EADuB,yBAEtBA,EAAUC,MAFY,2CAAH,qD,yGCe5B,UA7Cc,WACV,IAAQE,GAAYK,EAAAA,EAAAA,MAAZL,QACR,GAA0BM,EAAAA,EAAAA,UAAS,IAAnC,eAAMC,EAAN,KAAaC,EAAb,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAS,mCAAG,gHAEMP,EAAAA,EAAAA,IAAiBH,GAFvB,OAENW,EAFM,OAGLC,EAAQD,EAARC,KACPJ,EAAUI,GAJE,gDAOZC,QAAQC,IAAI,KAAMC,SAPN,yDAAH,qDAUfL,GACD,GAAC,CAACV,KAGF,8BACCO,EAAOS,QACP,wBAAKT,EAAOU,KAAI,SAAAC,GAAK,OACjB,0BACKA,EAAMC,cACH,gBACEC,IAAG,yCAAoCF,EAAMC,cAC7CE,IAAKH,EAAMI,QAGb,gBACEF,IAAG,oDACHC,IAAKH,EAAMI,QAGjB,mCAAWJ,EAAMI,SACjB,uCAAeJ,EAAMK,eAbhBL,EAAMM,GADE,OAgBd,wEAMd,C","sources":["API/API.jsx","pages/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'd1209b93bfca019c1d550689906b1b5c';\nconst URL = 'https://api.themoviedb.org/3/';\n// const URL = 'https://api.themoviedb.org/3/trending/movie/day';\n\n// https://api.themoviedb.org/3/search/movie?api_key={api_key}&query=Jack+Reacher\n\nexport const fetchTrendy = async () => {\n \n  const ressponse = await axios(`${URL}trending/movie/day?api_key=${API_KEY}`);\n  return ressponse.data;\n};\n\n\n\nexport const fetchById = async (movieId) => {\n  const ressponse = await axios(`${URL}movie/${movieId}?api_key=${API_KEY}`);\n  return ressponse.data;\n};\n\n\nexport const fetchByQuery = async (query) => {\n  const ressponse = await axios(`${URL}search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`);\n  return ressponse.data;\n};\n\n\nexport const fetchCreditsById = async (movieId) => {\n  const ressponse = await axios(`${URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n  return ressponse.data;\n};\n\n\nexport const fetchReviewById = async (movieId) => {\n  const ressponse = await axios(`${URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n  return ressponse.data;\n};","import { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { fetchCreditsById } from \"API/API\";\n\n const Cast = () => {\n    const { movieId } = useParams();\n    const[actors,setActors] = useState([]);\n\n    useEffect(()=>{\n        const getActors = async () => {\n            try {\n              const res = await fetchCreditsById(movieId) \n              const {cast} = res;\n              setActors(cast)\n             \n            } catch (error) {\n              console.log(error.message);\n            }\n          }\n        getActors()\n      },[movieId]);\n\n    return(\n       <>\n       {actors.length ? (\n        <ul>{actors.map(actor => \n            <li key={actor.id}>\n                {actor.profile_path ? (\n                    <img\n                      src={`https://image.tmdb.org/t/p/w200${actor.profile_path}`}\n                      alt={actor.name}\n                    />\n                  ) : (\n                    <img\n                      src={`https://via.placeholder.com/200x300?text=No+Image`}\n                      alt={actor.name}\n                    />\n                  )}\n                <h3>Name: {actor.name}</h3>\n                <p>Character: {actor.character}</p>\n            </li>)}</ul> ) : (\n               <p>We do not have any information about actors</p> \n            )\n\n       }\n       </>\n    )\n}\n\nexport default Cast;"],"names":["API_KEY","URL","fetchTrendy","axios","ressponse","data","fetchById","movieId","fetchByQuery","query","fetchCreditsById","fetchReviewById","useParams","useState","actors","setActors","useEffect","getActors","res","cast","console","log","message","length","map","actor","profile_path","src","alt","name","character","id"],"sourceRoot":""}