{"version":3,"file":"static/js/736.87f48890.chunk.js","mappings":"+SAEMA,EAAU,mCACVC,EAAM,gCAKCC,EAAW,mCAAG,qGAEDC,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,sCAAqCD,IAFzC,cAEnBI,EAFmB,yBAGlBA,EAAUC,MAHQ,2CAAH,qDAQXC,EAAS,mCAAG,WAAOC,GAAP,wFACCJ,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,iBAAgBM,EAAhB,oBAAmCP,IADzC,cACjBI,EADiB,yBAEhBA,EAAUC,MAFM,2CAAH,sDAMTG,EAAY,mCAAG,WAAOC,GAAP,gFACpBC,EAAa,IAAIC,gBADG,UAEFR,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,gCAA+BD,EAA/B,kBAAgDS,EAAhD,8CAAkG,CAACG,OAAQF,EAAWE,SAFzH,cAEpBR,EAFoB,yBAGnBA,EAAUC,MAHS,2CAAH,sDAOZQ,EAAgB,mCAAG,WAAON,GAAP,wFACNJ,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,iBAAgBM,EAAhB,4BAA2CP,EAA3C,oBADC,cACxBI,EADwB,yBAEvBA,EAAUC,MAFa,2CAAH,sDAMhBS,EAAe,mCAAG,WAAOP,GAAP,wFACLJ,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,iBAAgBM,EAAhB,4BAA2CP,EAA3C,2BADA,cACvBI,EADuB,yBAEtBA,EAAUC,MAFY,2CAAH,qD,yGCI5B,UAnCiB,WACb,IAAQE,GAAYQ,EAAAA,EAAAA,MAAZR,QACR,GAA4BS,EAAAA,EAAAA,UAAS,IAArC,eAAMC,EAAN,KAAcC,EAAd,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAS,mCAAG,gHAEMN,EAAAA,EAAAA,IAAgBP,GAFtB,OAENc,EAFM,OAGLC,EAAWD,EAAXC,QACPJ,EAAWI,GAJC,gDAOZC,QAAQC,IAAI,KAAMC,SAPN,yDAAH,qDAUfL,GACD,GAAC,CAACb,KAGF,8BACCU,EAAQS,QACR,wBAAKT,EAAQU,KAAI,SAAAC,GAAM,OACnB,2BAEI,qCAAaA,EAAOC,WACpB,uBAAID,EAAOE,YAHNF,EAAOG,GADG,OAMhB,sDAMd,C","sources":["API/API.jsx","pages/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'd1209b93bfca019c1d550689906b1b5c';\nconst URL = 'https://api.themoviedb.org/3/';\n// const URL = 'https://api.themoviedb.org/3/trending/movie/day';\n\n// https://api.themoviedb.org/3/search/movie?api_key={api_key}&query=Jack+Reacher\n\nexport const fetchTrendy = async () => {\n \n  const ressponse = await axios(`${URL}trending/movie/day?api_key=${API_KEY}`);\n  return ressponse.data;\n};\n\n\n\nexport const fetchById = async (movieId) => {\n  const ressponse = await axios(`${URL}movie/${movieId}?api_key=${API_KEY}`);\n  return ressponse.data;\n};\n\n\nexport const fetchByQuery = async (query) => {\n  const controller = new AbortController()\n  const ressponse = await axios(`${URL}search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`,{signal: controller.signal});\n  return ressponse.data;\n};\n\n\nexport const fetchCreditsById = async (movieId) => {\n  const ressponse = await axios(`${URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n  return ressponse.data;\n};\n\n\nexport const fetchReviewById = async (movieId) => {\n  const ressponse = await axios(`${URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n  return ressponse.data;\n};","import { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { fetchReviewById } from \"API/API\";\n\n const Reviews = () => {\n    const { movieId } = useParams();\n    const[reviews,setReviews] = useState([]);\n\n    useEffect(()=>{\n        const getReview = async () => {\n            try {\n              const res = await fetchReviewById(movieId) \n              const {results} = res;\n              setReviews(results)\n             \n            } catch (error) {\n              console.log(error.message);\n            }\n          }\n        getReview()\n      },[movieId]);\n\n    return(\n       <>\n       {reviews.length ? (\n        <ul>{reviews.map(review => \n            <li key={review.id}>\n                \n                <h3>Author: {review.author}</h3>\n                <p>{review.content}</p>\n            </li>)}</ul> ) : (\n               <p>This movie has no reviews</p> \n            )\n\n       }\n       </>\n    )\n}\n\nexport default Reviews;"],"names":["API_KEY","URL","fetchTrendy","axios","ressponse","data","fetchById","movieId","fetchByQuery","query","controller","AbortController","signal","fetchCreditsById","fetchReviewById","useParams","useState","reviews","setReviews","useEffect","getReview","res","results","console","log","message","length","map","review","author","content","id"],"sourceRoot":""}