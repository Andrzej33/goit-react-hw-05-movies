{"version":3,"file":"static/js/962.d00ab8d6.chunk.js","mappings":"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","sources":["API/API.jsx","components/MoviesList/MoviesList.jsx","components/MoviesList/StyledMovieList.jsx","components/StyledForm/StytledForm.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'd1209b93bfca019c1d550689906b1b5c';\nconst URL = 'https://api.themoviedb.org/3/';\n// const URL = 'https://api.themoviedb.org/3/trending/movie/day';\n\n// https://api.themoviedb.org/3/search/movie?api_key={api_key}&query=Jack+Reacher\n\nexport const fetchTrendy = async () => {\n \n  const ressponse = await axios(`${URL}trending/movie/day?api_key=${API_KEY}`);\n  return ressponse.data;\n};\n\n\n\nexport const fetchById = async (movieId) => {\n  const ressponse = await axios(`${URL}movie/${movieId}?api_key=${API_KEY}`);\n  return ressponse.data;\n};\n\n\nexport const fetchByQuery = async (query) => {\n  const controller = new AbortController()\n  const ressponse = await axios(`${URL}search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`,{signal: controller.signal});\n  return ressponse.data;\n};\n\n\nexport const fetchCreditsById = async (movieId) => {\n  const ressponse = await axios(`${URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n  return ressponse.data;\n};\n\n\nexport const fetchReviewById = async (movieId) => {\n  const ressponse = await axios(`${URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n  return ressponse.data;\n};","import PropTypes from 'prop-types';\nimport { StyledLink } from 'components/StyledLink/StyledLink';\nimport { useLocation } from 'react-router-dom';\nimport { StyledMovieList } from './StyledMovieList';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <StyledMovieList>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <StyledLink to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.title}{' '}\n            {movie.title !== movie.original_title && (\n              <span>:({movie.original_title})</span>\n            )}\n          </StyledLink>\n        </li>\n      ))}\n    </StyledMovieList>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      original_title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const StyledMovieList = styled.ul`\n  display: flex;\n  padding-left: 30px;\n  flex-direction: column;\n  gap: 10px;\n  font-size: 20px;\n`;\n\nexport const AdditionalTitle = styled.h4`\n  padding-left: 40px;\n  font-size: 22px;\n`;\n\nexport const AdditionalContainer = styled.div`\n  background-color: gainsboro;\n`;\n\nexport const AdditionalList = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  li {\n    font-size: 20px;\n    color: #128383;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  display: flex;\n  width: 500px;\n  margin-left: 100px;\n  input {\n    display: block;\n    width: 100%;\n    padding: 8px 16px;\n    line-height: 25px;\n    font-size: 24px;\n    font-weight: 500;\n    font-family: inherit;\n    border-radius: 4px;\n    color: #99a3ba;\n    border: 3px solid #cdd9ed;\n    background: #fff;\n    transition: border 0.3s ease;\n    &:focus {\n      outline: none;\n      border-color: #275efe;\n    }\n  }\n  button {\n    cursor: pointer;\n    border-radius: 4px;\n    text-align: center;\n    padding: 8px 12px;\n    font-size: 14px;\n    line-height: 25px;\n    color: #99a3ba;\n    background: #eef4ff;\n    border: 1px solid #cdd9ed;\n    transition: background 0.3s ease, border 0.3s ease, color 0.3s ease;\n  }\n  &:focus-within {\n    & > button {\n      color: #fff;\n      background: #678efe;\n      border-color: #275efe;\n    }\n  }\n`;\n","import { fetchByQuery } from 'API/API';\nimport { useState, useEffect } from 'react';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { toast } from 'react-toastify';\nimport { useSearchParams } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\nimport { StyledForm } from 'components/StyledForm/StytledForm';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) return;\n    setIsLoading(true);\n    const getTrendyMovies = async () => {\n      try {\n        const { results } = await fetchByQuery(query);\n        if (!results.length) {\n          setMovies([]);\n          return toast(`We find nothing about ${query}`);\n        }\n        setMovies(results);\n      } catch (error) {\n        toast.error(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getTrendyMovies();\n  }, [query]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const formData = new FormData(e.target);\n    const searchName = formData.get('name').toLowerCase();\n    if (searchName.trim() === '') {\n      return toast('Please enter your request');\n    }\n\n    setSearchParams({ query: searchName });\n    e.target.reset();\n  };\n\n  return (\n    <>\n      <StyledForm onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"name\" />\n        <button type=\"submit\">Search</button>\n      </StyledForm>\n      {isLoading && <Loader />}\n      {movies && <MoviesList movies={movies} />}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["API_KEY","URL","fetchTrendy","axios","ressponse","data","fetchById","movieId","fetchByQuery","query","controller","AbortController","signal","fetchCreditsById","fetchReviewById","MoviesList","movies","location","useLocation","map","movie","to","id","state","from","title","original_title","StyledMovieList","styled","AdditionalTitle","AdditionalContainer","AdditionalList","StyledForm","useSearchParams","searchParams","setSearchParams","useState","setMovies","isLoading","setIsLoading","get","useEffect","getTrendyMovies","results","length","toast","message","onSubmit","e","preventDefault","searchName","FormData","target","toLowerCase","trim","reset","type","name","Loader"],"sourceRoot":""}